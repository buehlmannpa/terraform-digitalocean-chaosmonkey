- become: yes
  hosts: all
  name: configuration
  tasks:
    - name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install git package
      apt:
        name: git
        update_cache: yes
        state: latest

    - name: Install bash package
      apt:
        name: bash
        update_cache: yes
        state: latest
    
    - name: Install Apache
      apt: 
        name: apache2
        update_cache: yes
        state: latest
      
    - name: Creates directory
      file:
        path: /home/chaosmonkey/download/
        state: directory
        owner: chaosmonkey
        group: chaosmonkey
        mode: '0755'

    - name: Creates chaos-monkey log directory
      file:
        path: /data/chaos-monkey/
        state: directory
        owner: chaosmonkey
        group: chaosmonkey
        mode: '0755'

    - name: Creates chaos-monkey backup log directory
      file:
        path: /data/chaos-monkey/backup/
        state: directory
        owner: chaosmonkey
        group: chaosmonkey
        mode: '0755'

######
###### ssh configuration for backup
######
    - name: Copy private ssh-key to remote host
      ansible.builtin.copy:
        #src: /Users/pbu/id_rsa
        src: /home/buehlmannpa/chaosmonkey-data/id_rsa
        dest: /home/chaosmonkey/.ssh/id_rsa
        owner: chaosmonkey
        group: chaosmonkey
        mode: '0600'

######
###### Clone Chaos-Monkey Git-Repository
######
    - name: Git checkout
      ansible.builtin.git:
        repo: https://github.com/buehlmannpa/application-digitalocean-chaosmonkey.git
        dest: /home/chaosmonkey/chaosmonkey-app
        version: main

######
###### DigitalOcean 'doctl'
######
    - name: Download DigitalOcean 'doctl'
      get_url:
        url: https://github.com/digitalocean/doctl/releases/download/v1.72.0/doctl-1.72.0-linux-amd64.tar.gz
        dest: /home/chaosmonkey/download
        mode: '0755'

    - name: Extract doctl.tar.gz into /home/chaosmonkey/download
      ansible.builtin.unarchive:
        copy: remote_src=True
        src: /home/chaosmonkey/download/doctl-1.72.0-linux-amd64.tar.gz
        dest: /home/chaosmonkey/download

    - name: Create a symbolic link for 'doctl'
      ansible.builtin.file:
        src: /home/chaosmonkey/download/doctl
        dest: /usr/local/bin/doctl
        owner: root
        group: root
        state: link

    - name: Copy DigitalOcean API Token
      ansible.builtin.copy:
        #src: /Users/pbu/do_token
        src: /home/buehlmannpa/chaosmonkey-data/do_token
        dest: /home/chaosmonkey/chaosmonkey-app
        owner: root
        group: root
        mode: '0644'


######
###### Install kubectl
######
    - name: add kubectl apt repository key
      become: true
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: add kubectl apt repository
      become: true
      apt_repository:
        repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
        filename: kubectl

    - name: install kubectl
      become: true
      apt:
        name: kubectl
        update_cache: yes
        state: latest

######
###### Start Chaos-Monkey
######
    - name: Execute chaos-monkey
      command: /home/chaosmonkey/chaosmonkey-app/chaosmonkey.sh
      become: yes
      become_user: chaosmonkey

    - name: Execute chaos-monkey backup 
      command: /home/chaosmonkey/chaosmonkey-app/backup.sh
      become: yes
      become_user: chaosmonkey


######
###### Set up apache
######
    - name: Create document root
      file:
        path: "/var/www/chaosmonkey"
        state: directory
        owner: "chaosmonkey"
        mode: '0755'

    - name: Copy chaos-monkey logo to apache direcotry
      ansible.builtin.copy:
        src: "webpage/chaosmonkey_logo.png"
        dest: "/var/www/chaosmonkey/chaosmonkey_logo.png"
        owner: chaosmonkey
        group: chaosmonkey
        mode: '0755'

    - name: Copy webpage to apache direcotry
      template:
        src: "webpage/index.html.j2"
        dest: "/var/www/chaosmonkey/index.html"

    - name: Set up Apache virtuahHost
      template:
        src: "webpage/apache.conf.j2"
        dest: "/etc/apache2/sites-available/chaosmonkey.conf"

    - name: Enable new site
      shell: /usr/sbin/a2ensite chaosmonkey.conf
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      notify: Reload Apache

    - name: UFW - Allow HTTP on port 80
      ufw:
        rule: allow
        port: "80"
        proto: tcp

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
{
  "version": 4,
  "terraform_version": "1.1.7",
  "serial": 146,
  "lineage": "42615ad6-4849-743c-cc73-341dcab905db",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "digitalocean_kubernetes_versions",
      "name": "prefix",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "terraform-20220322201236076700000001",
            "latest_version": "1.22.7-do.0",
            "valid_versions": [
              "1.22.7-do.0"
            ],
            "version_prefix": "1.22."
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_file_documents",
      "name": "docs",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - name: carts-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: weaveworksdemos/catalogue:0.3.5\n        command: [\"/app\"]\n        args:\n        - -port=80\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: weaveworksdemos/catalogue-db:0.3.0\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - name: front-end\n        image: weaveworksdemos/front-end:0.3.12\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 8079\n        env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: front-end\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: front-end\n  namespace: sock-shop\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    targetPort: 8079\n    nodePort: 30001\n  selector:\n    name: front-end\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: payment\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n      annotations:\n        prometheus.io/scrape: \"false\"\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8-management\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n              - DAC_OVERRIDE\n          readOnlyRootFilesystem: true\n      - name: rabbitmq-exporter\n        image: kbudde/rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  annotations:\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9090'\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    name: rabbitmq\n    targetPort: 5672\n  - port: 9090\n    name: exporter\n    targetPort: exporter\n    protocol: TCP\n  selector:\n    name: rabbitmq\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      labels:\n        name: session-db\n      annotations:\n        prometheus.io.scrape: \"false\"\n    spec:\n      containers:\n      - name: session-db\n        image: redis:alpine\n        ports:\n        - name: redis\n          containerPort: 6379\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin.jaeger.svc.cluster.local\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        env:\n        - name: mongo\n          value: user-db:27017\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: weaveworksdemos/user-db:0.3.0\n\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
            "documents": [
              "---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - name: carts-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: weaveworksdemos/catalogue:0.3.5\n        command: [\"/app\"]\n        args:\n        - -port=80\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: weaveworksdemos/catalogue-db:0.3.0\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - name: front-end\n        image: weaveworksdemos/front-end:0.3.12\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 8079\n        env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: front-end\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: front-end\n  namespace: sock-shop\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    targetPort: 8079\n    nodePort: 30001\n  selector:\n    name: front-end",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: payment",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n      annotations:\n        prometheus.io/scrape: \"false\"\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8-management\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n              - DAC_OVERRIDE\n          readOnlyRootFilesystem: true\n      - name: rabbitmq-exporter\n        image: kbudde/rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  annotations:\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9090'\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    name: rabbitmq\n    targetPort: 5672\n  - port: 9090\n    name: exporter\n    targetPort: exporter\n    protocol: TCP\n  selector:\n    name: rabbitmq",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      labels:\n        name: session-db\n      annotations:\n        prometheus.io.scrape: \"false\"\n    spec:\n      containers:\n      - name: session-db\n        image: redis:alpine\n        ports:\n        - name: redis\n          containerPort: 6379\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin.jaeger.svc.cluster.local\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        env:\n        - name: mongo\n          value: user-db:27017\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: weaveworksdemos/user-db:0.3.0\n\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db"
            ],
            "id": "c2826c6dbbf788a237a436a10dcbcbfc6a1f40919576619aadf8e5ff51c6a4c3",
            "manifests": {
              "/api/v1/namespaces/sock-shop": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop\n",
              "/api/v1/namespaces/sock-shop/services/carts": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
              "/api/v1/namespaces/sock-shop/services/carts-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
              "/api/v1/namespaces/sock-shop/services/catalogue": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
              "/api/v1/namespaces/sock-shop/services/catalogue-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
              "/api/v1/namespaces/sock-shop/services/front-end": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: front-end\n  name: front-end\n  namespace: sock-shop\nspec:\n  ports:\n  - nodePort: 30001\n    port: 80\n    targetPort: 8079\n  selector:\n    name: front-end\n  type: NodePort\n",
              "/api/v1/namespaces/sock-shop/services/orders": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
              "/api/v1/namespaces/sock-shop/services/orders-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
              "/api/v1/namespaces/sock-shop/services/payment": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: payment\n",
              "/api/v1/namespaces/sock-shop/services/queue-master": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n",
              "/api/v1/namespaces/sock-shop/services/rabbitmq": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/port: \"9090\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n  - name: rabbitmq\n    port: 5672\n    targetPort: 5672\n  - name: exporter\n    port: 9090\n    protocol: TCP\n    targetPort: exporter\n  selector:\n    name: rabbitmq\n",
              "/api/v1/namespaces/sock-shop/services/session-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
              "/api/v1/namespaces/sock-shop/services/shipping": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n",
              "/api/v1/namespaces/sock-shop/services/user": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user\n",
              "/api/v1/namespaces/sock-shop/services/user-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/carts": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/carts:0.4.8\n        name: carts\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/carts-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - image: mongo\n        name: carts-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - args:\n        - -port=80\n        command:\n        - /app\n        image: weaveworksdemos/catalogue:0.3.5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: catalogue\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: fake_password\n        - name: MYSQL_DATABASE\n          value: socksdb\n        image: weaveworksdemos/catalogue-db:0.3.0\n        name: catalogue-db\n        ports:\n        - containerPort: 3306\n          name: mysql\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/front-end": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        image: weaveworksdemos/front-end:0.3.12\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: front-end\n        ports:\n        - containerPort: 8079\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/orders": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/orders:0.4.7\n        name: orders\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/orders-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - image: mongo\n        name: orders-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/payment": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - image: weaveworksdemos/payment:0.4.3\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: payment\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/queue-master": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/queue-master:0.3.1\n        name: queue-master\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"false\"\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3.6.8-management\n        name: rabbitmq\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            - DAC_OVERRIDE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      - image: kbudde/rabbitmq-exporter\n        name: rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/session-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      annotations:\n        prometheus.io.scrape: \"false\"\n      labels:\n        name: session-db\n    spec:\n      containers:\n      - image: redis:alpine\n        name: session-db\n        ports:\n        - containerPort: 6379\n          name: redis\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/shipping": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - env:\n        - name: ZIPKIN\n          value: zipkin.jaeger.svc.cluster.local\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/shipping:0.4.8\n        name: shipping\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/user": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - env:\n        - name: mongo\n          value: user-db:27017\n        image: weaveworksdemos/user:0.4.7\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: user\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/user-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - image: weaveworksdemos/user-db:0.3.0\n        name: user-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_kubernetes_cluster",
      "name": "k8s_cluster_c1",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "auto_upgrade": false,
            "cluster_subnet": "10.244.0.0/16",
            "created_at": "2022-03-22 20:12:44 +0000 UTC",
            "endpoint": "https://f59498be-e6eb-46da-9ac9-43e656336f1a.k8s.ondigitalocean.com",
            "ha": false,
            "id": "f59498be-e6eb-46da-9ac9-43e656336f1a",
            "ipv4_address": "164.92.184.181",
            "kube_config": [
              {
                "client_certificate": "",
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNakF6TWpJeQpNREV5TlRKYUZ3MDBNakF6TWpJeU1ERXlOVEphTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEOXU3Wm9MSjJQcjFsS2JTalA1TTVsNUxMcmlXalEydmxid0pwTU1ISloxV0E0Ni8wegpzbVJWSzVyNHVnVm9vWjhuSGhhbThRdjhIU2NiZVNsbWozQ0xuSlVuYmE2U3EvYUdZTXRkVnM3RVJvVU5MQmxQCkg3ZUhLRE5yT0VPQjlocDJVK3UwZnN6YnVlRG1HbTBnUmhvVUkrMEN1ak1QQ1N2UlRsRDhDS2MwcjNveXg3R1MKYmZ3cEptYVNBaU5VV293WEZCayt5T2FzVm1ab1NXWWdSMFAyOFNaTVZjYjVDb1VQYURBaGFjRmUwRFVtbkJiZgpyODBtTExRZ3JJRnB1ZnUrTzdaYmhaS2twNU4wWk9BSWVaOWsydVFEcGs1MFNKM3oxWFBadjIvbWN0dmJzL2QzCnZnT1JpQmhlaitLZXBNMTN4R3NHV1d2ODdtSldUTTJQUlpIZEFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlI5WHJicWFiaVErM2dwaGhtSApLbkJGVmF1L3FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjcTM1Z1p1THErS1VDS0VnMmUrZlluaVR4M0pUCjMyVmRnUUlWcEhVeld0cjFOWkpIbG82WThwUnNpNTNqdTRBdXdVTzdheUYycFRXYW1sMU5QOHBSMTFUMXBraFAKeFNYalFzSDBMZTNZMU5EVm03c1JrQlQrWXNIeGdBcHlPc0ZidWc4Mm9OTmpYbFdQWElwOGlOTVp3NHhUNU1ZYQpEaEg2NWErc0IvR1Y0ZDJIZzVNeDJuSWl6ZU8xaGd3TUwzMmVOaXFDeWFkY3NFNWNsUkEzV2VTY0VnL2xNVjJXCnNobEFWZzlmdkI4NDdpTDl0clRaTmtaTGpCZ0pjV2h2Z0hzT0trRUcweEh6aFVZVi81SmFxUE1pSDhORnlrTDYKdHM3dDJIaWc1SXJZU2lFY3NvUnFKVUV5NGJPVU9zcnBsckRVcmVYNUsyM0xqNTltdW9aanl3cVhDZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "expires_at": "2022-03-29T20:18:46Z",
                "host": "https://f59498be-e6eb-46da-9ac9-43e656336f1a.k8s.ondigitalocean.com",
                "raw_config": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNakF6TWpJeQpNREV5TlRKYUZ3MDBNakF6TWpJeU1ERXlOVEphTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEOXU3Wm9MSjJQcjFsS2JTalA1TTVsNUxMcmlXalEydmxid0pwTU1ISloxV0E0Ni8wegpzbVJWSzVyNHVnVm9vWjhuSGhhbThRdjhIU2NiZVNsbWozQ0xuSlVuYmE2U3EvYUdZTXRkVnM3RVJvVU5MQmxQCkg3ZUhLRE5yT0VPQjlocDJVK3UwZnN6YnVlRG1HbTBnUmhvVUkrMEN1ak1QQ1N2UlRsRDhDS2MwcjNveXg3R1MKYmZ3cEptYVNBaU5VV293WEZCayt5T2FzVm1ab1NXWWdSMFAyOFNaTVZjYjVDb1VQYURBaGFjRmUwRFVtbkJiZgpyODBtTExRZ3JJRnB1ZnUrTzdaYmhaS2twNU4wWk9BSWVaOWsydVFEcGs1MFNKM3oxWFBadjIvbWN0dmJzL2QzCnZnT1JpQmhlaitLZXBNMTN4R3NHV1d2ODdtSldUTTJQUlpIZEFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlI5WHJicWFiaVErM2dwaGhtSApLbkJGVmF1L3FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjcTM1Z1p1THErS1VDS0VnMmUrZlluaVR4M0pUCjMyVmRnUUlWcEhVeld0cjFOWkpIbG82WThwUnNpNTNqdTRBdXdVTzdheUYycFRXYW1sMU5QOHBSMTFUMXBraFAKeFNYalFzSDBMZTNZMU5EVm03c1JrQlQrWXNIeGdBcHlPc0ZidWc4Mm9OTmpYbFdQWElwOGlOTVp3NHhUNU1ZYQpEaEg2NWErc0IvR1Y0ZDJIZzVNeDJuSWl6ZU8xaGd3TUwzMmVOaXFDeWFkY3NFNWNsUkEzV2VTY0VnL2xNVjJXCnNobEFWZzlmdkI4NDdpTDl0clRaTmtaTGpCZ0pjV2h2Z0hzT0trRUcweEh6aFVZVi81SmFxUE1pSDhORnlrTDYKdHM3dDJIaWc1SXJZU2lFY3NvUnFKVUV5NGJPVU9zcnBsckRVcmVYNUsyM0xqNTltdW9aanl3cVhDZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://f59498be-e6eb-46da-9ac9-43e656336f1a.k8s.ondigitalocean.com\n  name: do-fra1-k8s-cluter-c1-fra1-1227\ncontexts:\n- context:\n    cluster: do-fra1-k8s-cluter-c1-fra1-1227\n    user: do-fra1-k8s-cluter-c1-fra1-1227-admin\n  name: do-fra1-k8s-cluter-c1-fra1-1227\ncurrent-context: do-fra1-k8s-cluter-c1-fra1-1227\nusers:\n- name: do-fra1-k8s-cluter-c1-fra1-1227-admin\n  user:\n    token: 107e0c5b4040ea497789a6e3b6bfa1a81fac77814fb10aa42d13ba1d30c3b451\n",
                "token": "107e0c5b4040ea497789a6e3b6bfa1a81fac77814fb10aa42d13ba1d30c3b451"
              }
            ],
            "maintenance_policy": [
              {
                "day": "any",
                "duration": "4h0m0s",
                "start_time": "23:00"
              }
            ],
            "name": "k8s-cluter-c1-fra1-1227",
            "node_pool": [
              {
                "actual_node_count": 3,
                "auto_scale": true,
                "id": "6da2391c-0e59-4457-bda6-31b0fceff88f",
                "labels": {
                  "env": "prod",
                  "made-by": "terraform",
                  "service": "kubernetes"
                },
                "max_nodes": 10,
                "min_nodes": 1,
                "name": "k8s-autoscale-nodepool-c1-fra1",
                "node_count": 3,
                "nodes": [
                  {
                    "created_at": "2022-03-22 20:12:44 +0000 UTC",
                    "droplet_id": "291814970",
                    "id": "21a2afff-3407-4d6f-959f-4dfd5e6834dc",
                    "name": "k8s-autoscale-nodepool-c1-fra1-c8nba",
                    "status": "running",
                    "updated_at": "2022-03-22 20:16:38 +0000 UTC"
                  },
                  {
                    "created_at": "2022-03-22 20:12:44 +0000 UTC",
                    "droplet_id": "291814968",
                    "id": "f355491b-fb5e-4212-a8a5-3ce56255afa8",
                    "name": "k8s-autoscale-nodepool-c1-fra1-c8nb6",
                    "status": "running",
                    "updated_at": "2022-03-22 20:16:38 +0000 UTC"
                  },
                  {
                    "created_at": "2022-03-22 20:12:44 +0000 UTC",
                    "droplet_id": "291814969",
                    "id": "86f59267-ad63-4ef5-ab7b-28f49450ed88",
                    "name": "k8s-autoscale-nodepool-c1-fra1-c8nbt",
                    "status": "running",
                    "updated_at": "2022-03-22 20:16:38 +0000 UTC"
                  }
                ],
                "size": "s-2vcpu-2gb",
                "tags": [
                  "kubernetes",
                  "nodes"
                ],
                "taint": []
              }
            ],
            "region": "fra1",
            "service_subnet": "10.245.0.0/16",
            "status": "running",
            "surge_upgrade": true,
            "tags": null,
            "timeouts": null,
            "updated_at": "2022-03-22 20:18:37 +0000 UTC",
            "urn": "do:kubernetes:f59498be-e6eb-46da-9ac9-43e656336f1a",
            "version": "1.22.7-do.0",
            "vpc_uuid": "81dc5f3e-1745-41a7-b36f-0652b19a9645"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIzIn0=",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "digitalocean_project",
      "name": "chaosmonkey_dev",
      "provider": "provider[\"registry.terraform.io/digitalocean/digitalocean\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2022-03-22T20:18:47Z",
            "description": "All resources for the thesis about the Kubernetes ChaosMonkey",
            "environment": "Development",
            "id": "e9ab1579-7945-4147-9798-6fdb6667066f",
            "is_default": false,
            "name": "ChaosMonkey-Development",
            "owner_id": 10955210,
            "owner_uuid": "fe8e710e-0011-4e51-b82f-fb719b89e1c6",
            "purpose": "Web Application",
            "resources": [
              "do:kubernetes:f59498be-e6eb-46da-9ac9-43e656336f1a"
            ],
            "updated_at": "2022-03-22T20:18:47Z"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "/api/v1/namespaces/sock-shop",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "883ce90a5ff65d3ea041c89418c53ec3c8724fdbe3c743f1d15fdc6b2f73bf01",
            "live_uid": "e195ac5f-1e5d-4200-98b7-3892bbaddd57",
            "name": "sock-shop",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "e195ac5f-1e5d-4200-98b7-3892bbaddd57",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: sock-shop\n",
            "yaml_incluster": "883ce90a5ff65d3ea041c89418c53ec3c8724fdbe3c743f1d15fdc6b2f73bf01"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/carts",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/carts",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "eb300c163215b7ad2a33303fd1c8c79b47e18e5c78dc2bd35871008c48fd48f2",
            "live_uid": "8c4d5247-eb3a-4b76-91a8-ee8092510fe7",
            "name": "carts",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8c4d5247-eb3a-4b76-91a8-ee8092510fe7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
            "yaml_incluster": "eb300c163215b7ad2a33303fd1c8c79b47e18e5c78dc2bd35871008c48fd48f2"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/carts-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/carts-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "e3029c4bcfc55211274c49e3c15b09edf49d322b936d2d8032f6f046764bd9e8",
            "live_uid": "9ba6cb20-830b-49fc-8ea2-44556255d856",
            "name": "carts-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9ba6cb20-830b-49fc-8ea2-44556255d856",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
            "yaml_incluster": "e3029c4bcfc55211274c49e3c15b09edf49d322b936d2d8032f6f046764bd9e8"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/catalogue",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/catalogue",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "4a18afe69d1212d1a4e732ee33fe15ebd57a406f4bea6d96bc254af3177fe94c",
            "live_uid": "7f68029e-a071-4668-8b0d-96492cb0af3d",
            "name": "catalogue",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7f68029e-a071-4668-8b0d-96492cb0af3d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
            "yaml_incluster": "4a18afe69d1212d1a4e732ee33fe15ebd57a406f4bea6d96bc254af3177fe94c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/catalogue-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/catalogue-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "ce55b5ae929c695f837b11ad16aae4b4c044220556d68b85baf3037e7be03c7b",
            "live_uid": "791b38ef-618c-45de-9699-7bab7dda1aff",
            "name": "catalogue-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "791b38ef-618c-45de-9699-7bab7dda1aff",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
            "yaml_incluster": "ce55b5ae929c695f837b11ad16aae4b4c044220556d68b85baf3037e7be03c7b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/front-end",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/front-end",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "4246466b5e0b50fdef006b9fcfaeec1b2b4baf717d4c33fb647a03118a0491b9",
            "live_uid": "ab288c53-c280-48bf-b1f5-66c1d1fd9048",
            "name": "front-end",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ab288c53-c280-48bf-b1f5-66c1d1fd9048",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: front-end\n  name: front-end\n  namespace: sock-shop\nspec:\n  ports:\n  - nodePort: 30001\n    port: 80\n    targetPort: 8079\n  selector:\n    name: front-end\n  type: NodePort\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: front-end\n  name: front-end\n  namespace: sock-shop\nspec:\n  ports:\n  - nodePort: 30001\n    port: 80\n    targetPort: 8079\n  selector:\n    name: front-end\n  type: NodePort\n",
            "yaml_incluster": "4246466b5e0b50fdef006b9fcfaeec1b2b4baf717d4c33fb647a03118a0491b9"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/orders",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/orders",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "cab738b8572d7f8885b952f1bbef3bbde4f5f22e0d9b0feaffeacf6d43d335e4",
            "live_uid": "683ec7ed-fc38-4d2b-bd63-1b08190f0e86",
            "name": "orders",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "683ec7ed-fc38-4d2b-bd63-1b08190f0e86",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
            "yaml_incluster": "cab738b8572d7f8885b952f1bbef3bbde4f5f22e0d9b0feaffeacf6d43d335e4"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/orders-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/orders-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "e89d8b835219e87b34f2de1d412507d279be3407191609894cf6aed1d76a4121",
            "live_uid": "456637ab-8c40-4c5c-8465-a9e3c78589ff",
            "name": "orders-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "456637ab-8c40-4c5c-8465-a9e3c78589ff",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
            "yaml_incluster": "e89d8b835219e87b34f2de1d412507d279be3407191609894cf6aed1d76a4121"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/queue-master",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/queue-master",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "0f008d79cb5fd5320eff59759dfb234a99250f03db099dbc406969825a629d19",
            "live_uid": "60de5c40-58b1-4456-af48-898f5cfe67cf",
            "name": "queue-master",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "60de5c40-58b1-4456-af48-898f5cfe67cf",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n",
            "yaml_incluster": "0f008d79cb5fd5320eff59759dfb234a99250f03db099dbc406969825a629d19"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/session-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/session-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "26cba484261f4621b3eac0701c29cc54ed70bb8c13dccf3ec6d664a4064b8c4d",
            "live_uid": "564f4fe0-8cf9-43d8-bc0a-317fc48cd2ce",
            "name": "session-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "564f4fe0-8cf9-43d8-bc0a-317fc48cd2ce",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
            "yaml_incluster": "26cba484261f4621b3eac0701c29cc54ed70bb8c13dccf3ec6d664a4064b8c4d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/shipping",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/shipping",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "f965661a3fa7f117df42cb52f3de53066a18c9c1aa2d055fd038bdd0de8e8a5a",
            "live_uid": "bd492a33-4b58-4065-bc5a-8c0f8503207f",
            "name": "shipping",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "bd492a33-4b58-4065-bc5a-8c0f8503207f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n",
            "yaml_incluster": "f965661a3fa7f117df42cb52f3de53066a18c9c1aa2d055fd038bdd0de8e8a5a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/user",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/user",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "76eeafdfa2a3d3a407900d6348dcb71c9a04ed420d50e388f319e66464e64003",
            "live_uid": "83efabf6-d319-4f7c-b036-1dc1553f6f59",
            "name": "user",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "83efabf6-d319-4f7c-b036-1dc1553f6f59",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    name: user\n",
            "yaml_incluster": "76eeafdfa2a3d3a407900d6348dcb71c9a04ed420d50e388f319e66464e64003"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/user-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/user-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "292bb764a9115b56205faf5552ecdc83395479e921e1f85885e590776c80af66",
            "live_uid": "bde7bc0d-7b72-4475-baa4-2906fcce00d2",
            "name": "user-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "bde7bc0d-7b72-4475-baa4-2906fcce00d2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
            "yaml_incluster": "292bb764a9115b56205faf5552ecdc83395479e921e1f85885e590776c80af66"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/carts-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/carts-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "1d6646cf0365e6622aa93597f481ee318e74835ca2ba2d72935997c77c2e35f0",
            "live_uid": "bea58cbc-6652-4074-a190-11773159448d",
            "name": "carts-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "bea58cbc-6652-4074-a190-11773159448d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - image: mongo\n        name: carts-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - image: mongo\n        name: carts-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "1d6646cf0365e6622aa93597f481ee318e74835ca2ba2d72935997c77c2e35f0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "9f595433673034fdeb23281fcba05a507174be0c06bc26d4a3f2386347f7d28d",
            "live_uid": "d787194f-a0a7-459b-b70c-c92dfb9fa35b",
            "name": "catalogue",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d787194f-a0a7-459b-b70c-c92dfb9fa35b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - args:\n        - -port=80\n        command:\n        - /app\n        image: weaveworksdemos/catalogue:0.3.5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: catalogue\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - args:\n        - -port=80\n        command:\n        - /app\n        image: weaveworksdemos/catalogue:0.3.5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: catalogue\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "9f595433673034fdeb23281fcba05a507174be0c06bc26d4a3f2386347f7d28d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "393755518fa7ce91f58325194d9128abe2d178380b3103101eb6b4363e9bffcd",
            "live_uid": "20f23b6d-f190-4fcc-a9d4-bc6b1b69d0cf",
            "name": "catalogue-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "20f23b6d-f190-4fcc-a9d4-bc6b1b69d0cf",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: fake_password\n        - name: MYSQL_DATABASE\n          value: socksdb\n        image: weaveworksdemos/catalogue-db:0.3.0\n        name: catalogue-db\n        ports:\n        - containerPort: 3306\n          name: mysql\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: fake_password\n        - name: MYSQL_DATABASE\n          value: socksdb\n        image: weaveworksdemos/catalogue-db:0.3.0\n        name: catalogue-db\n        ports:\n        - containerPort: 3306\n          name: mysql\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "393755518fa7ce91f58325194d9128abe2d178380b3103101eb6b4363e9bffcd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/front-end",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/front-end",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "cf92a04d434199e016b5dee304e0892c12fb6075847fb3a258eea7a175d79a05",
            "live_uid": "2ccfb67a-2456-48b8-89db-9735bf08dfba",
            "name": "front-end",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2ccfb67a-2456-48b8-89db-9735bf08dfba",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        image: weaveworksdemos/front-end:0.3.12\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: front-end\n        ports:\n        - containerPort: 8079\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        image: weaveworksdemos/front-end:0.3.12\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: front-end\n        ports:\n        - containerPort: 8079\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "cf92a04d434199e016b5dee304e0892c12fb6075847fb3a258eea7a175d79a05"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/orders-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/orders-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "73f615fed2ac0221388ecb22e3dee1dd3da67b0334574c6831689c066eb9d8fd",
            "live_uid": "c39881a1-a8a8-4ee3-ae4e-273341aa5510",
            "name": "orders-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c39881a1-a8a8-4ee3-ae4e-273341aa5510",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - image: mongo\n        name: orders-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - image: mongo\n        name: orders-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "73f615fed2ac0221388ecb22e3dee1dd3da67b0334574c6831689c066eb9d8fd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "678593588e5df5a0137a27cf68646ed229537147d80ce138ea566e2279f59ef6",
            "live_uid": "b5031b25-5e5d-4adc-b07c-7ba8601cf453",
            "name": "rabbitmq",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b5031b25-5e5d-4adc-b07c-7ba8601cf453",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"false\"\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3.6.8-management\n        name: rabbitmq\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            - DAC_OVERRIDE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      - image: kbudde/rabbitmq-exporter\n        name: rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"false\"\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3.6.8-management\n        name: rabbitmq\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            - DAC_OVERRIDE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      - image: kbudde/rabbitmq-exporter\n        name: rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "678593588e5df5a0137a27cf68646ed229537147d80ce138ea566e2279f59ef6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/session-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/session-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "f2012bb3bf5f73e1aaa0911d66c91db2de8b0edbe40816c1a0031607f7ca99bc",
            "live_uid": "5da9c3ee-8ef8-4904-b8bf-e94dadc1dc52",
            "name": "session-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5da9c3ee-8ef8-4904-b8bf-e94dadc1dc52",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      annotations:\n        prometheus.io.scrape: \"false\"\n      labels:\n        name: session-db\n    spec:\n      containers:\n      - image: redis:alpine\n        name: session-db\n        ports:\n        - containerPort: 6379\n          name: redis\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      annotations:\n        prometheus.io.scrape: \"false\"\n      labels:\n        name: session-db\n    spec:\n      containers:\n      - image: redis:alpine\n        name: session-db\n        ports:\n        - containerPort: 6379\n          name: redis\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "f2012bb3bf5f73e1aaa0911d66c91db2de8b0edbe40816c1a0031607f7ca99bc"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/shipping",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/shipping",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "6ae74cffec4e727554c13a36284fcdbaace818790b966b2244680244caf53971",
            "live_uid": "b17a1eb9-a337-4864-a622-9af6e6e5078b",
            "name": "shipping",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b17a1eb9-a337-4864-a622-9af6e6e5078b",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - env:\n        - name: ZIPKIN\n          value: zipkin.jaeger.svc.cluster.local\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/shipping:0.4.8\n        name: shipping\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - env:\n        - name: ZIPKIN\n          value: zipkin.jaeger.svc.cluster.local\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/shipping:0.4.8\n        name: shipping\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "6ae74cffec4e727554c13a36284fcdbaace818790b966b2244680244caf53971"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/user",
          "status": "tainted",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/user",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "7e2beb7c4ff76f2c3c40077ec573c7c3d1cafd2f09c861f36f0f31d4a56af98f",
            "live_uid": "0bd423d4-10b8-4912-b500-9a2bfa4b2448",
            "name": "user",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0bd423d4-10b8-4912-b500-9a2bfa4b2448",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - env:\n        - name: mongo\n          value: user-db:27017\n        image: weaveworksdemos/user:0.4.7\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: user\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - env:\n        - name: mongo\n          value: user-db:27017\n        image: weaveworksdemos/user:0.4.7\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: user\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "7e2beb7c4ff76f2c3c40077ec573c7c3d1cafd2f09c861f36f0f31d4a56af98f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.digitalocean_kubernetes_versions.prefix",
            "data.kubectl_file_documents.docs",
            "digitalocean_kubernetes_cluster.k8s_cluster_c1"
          ]
        }
      ]
    }
  ]
}
